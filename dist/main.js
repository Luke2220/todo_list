(()=>{"use strict";const e=(()=>{const e=[];return{addProject:(t,n,d,i)=>{let a=((e,t,n,d)=>{const i=[];return{editProject:(i,a,l,o)=>{e=i,t=a,n=l,d=o},getName:()=>e,getPriority:()=>t,getDate:()=>n,getDesc:()=>d,addTodo:(e,t,n,d)=>{const a=((e,t,n,d)=>({getName:()=>e,getDesc:()=>d,getDate:()=>n,getPriority:()=>t,editProject:(i,a,l,o)=>{e=i,t=a,n=l,d=o}}))(e,t,n,d);return i.push(a),a},getTodos:()=>i,ourTodos:i,ourDiv:null,deleteTodo:e=>{i.forEach(((t,n)=>{t.getName()==e&&delete i[n]}))}}})(t,n,d,i);return e.push(a),a},removeProject:t=>{e.forEach(((n,d)=>{n==t&&delete e[d]}))},FindProject:t=>{e.forEach(((n,d)=>{if(n==t)return e[d]}))},getList:()=>e,selectedProject:void 0}})();function t(e,t){if(document.getElementsByClassName("editForm").length<=0){let a=document.createElement("form");a.classList.add("editForm"),document.createElement("p").textContent="Edit";let l=document.createElement("input");l.setAttribute("type","text"),l.setAttribute("name","title");let o=document.createElement("input");o.setAttribute("type","text"),o.setAttribute("name","desc");let r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("name","dueDate");let c=document.createElement("input");c.setAttribute("type","radio"),c.setAttribute("name","priority"),c.setAttribute("id","low");let s=document.createElement("input");s.setAttribute("type","radio"),s.setAttribute("name","priority"),s.setAttribute("id","med");let m=document.createElement("input");m.setAttribute("type","radio"),m.setAttribute("name","priority"),m.setAttribute("id","high");let u=document.createElement("input");return u.setAttribute("type","submit"),u.setAttribute("value","Save"),u.addEventListener("click",(e=>{e.preventDefault();const d=new FormData(a);var i;t.editProject(d.get("title"),d.get("priority"),d.get("dueDate"),d.get("desc")),(i=t).ourDiv.getElementsByClassName("title")[0].textContent=i.getName(),i.ourDiv.getElementsByClassName("desc")[0].textContent=i.getDesc(),i.ourDiv.getElementsByClassName("dueDate")[0].textContent=i.getDate(),n(a)})),a.appendChild(d()),a.appendChild(i("Edit Form:","title")),a.appendChild(d()),a.appendChild(l),a.appendChild(d()),a.appendChild(i("Edit Description:","desc")),a.appendChild(d()),a.appendChild(o),a.appendChild(d()),a.appendChild(i("Edit Due-Date:","dueDate")),a.appendChild(d()),a.appendChild(r),a.appendChild(d()),a.appendChild(c),a.appendChild(i("Low","dueDate")),a.appendChild(s),a.appendChild(i("High","dueDate")),a.appendChild(m),a.appendChild(i("Medium","dueDate")),a.appendChild(d()),a.appendChild(u),e.appendChild(a),a}n(document.getElementsByClassName("editForm")[0])}function n(e){e.remove()}function d(){return document.createElement("br")}function i(e,t){const n=document.createElement("label");return n.textContent=e,n.setAttribute("name",t),n}const a=document.getElementsByClassName("addProject")[0],l=document.getElementsByClassName("addTodo")[0],o=document.getElementsByClassName("projectList")[0],r=document.getElementsByClassName("todoList")[0],c=document.getElementsByClassName("projectForm")[0],s=document.getElementsByClassName("todoForm")[0],m=document.getElementsByClassName("projectSave")[0],u=document.getElementsByClassName("todoSave")[0];function p(n,d,i){let a=document.createElement("div");n.ourDiv=a;let l=document.createElement("p");l.textContent=n.getName(),l.classList.add("title");let o=document.createElement("div");o.classList.add("visibleForm","info"),l.addEventListener("click",(()=>{E(o)}));let r=document.createElement("p");r.textContent=n.getDesc(),r.classList.add("desc");let c=document.createElement("p");c.textContent=n.getDate(),c.classList.add("dueDate");let s=document.createElement("button");s.textContent="Edit",s.addEventListener("click",(()=>{t(a,n)}));let m=document.createElement("button");m.textContent="Delete",m.addEventListener("click",(()=>{e.selectedProject.deleteTodo(n.getName()),C(a)})),o.appendChild(r),o.appendChild(c),a.appendChild(l),a.appendChild(o),a.appendChild(s),a.appendChild(m),i.appendChild(a),E(d)}function C(e){e.remove()}function E(e){e.classList.toggle("visibleForm")}a.addEventListener("click",(()=>{E(c)})),l.addEventListener("click",(()=>{E(s)})),m.addEventListener("click",(n=>{n.preventDefault(),function(n,d,i,a){let l=document.createElement("div");n.ourDiv=l;let o=document.createElement("p");o.textContent=n.getName(),o.classList.add("title");let c=document.createElement("div");c.classList.add("visibleForm","info"),o.addEventListener("click",(()=>{var t;null!=(t=a)&&Array.from(t.children).forEach((e=>{e.remove()})),function(t){null!=e.selectedProject&&E(e.selectedProject.ourDiv.getElementsByClassName("info")[0]),e.selectedProject=t,t.ourTodos.forEach((e=>{p(e,s,r)}))}(n),E(c)}));let m=document.createElement("p");m.textContent=n.getDesc(),m.classList.add("desc");let u=document.createElement("p");u.textContent=n.getDate(),u.classList.add("dueDate");let g=document.createElement("button");g.textContent="Edit",g.addEventListener("click",(()=>{t(l,n)}));let h=document.createElement("button");h.textContent="Delete",h.addEventListener("click",(()=>{e.removeProject(n),C(l),function(e){for(;e.firstChild;)C(e.firstChild)}(r)})),c.appendChild(m),c.appendChild(u),l.appendChild(o),l.appendChild(c),l.appendChild(g),l.appendChild(h),i.appendChild(l),E(d)}(function(){let t=new FormData(c);return e.addProject(t.get("title"),t.get("priority"),t.get("dueDate"),t.get("desc"))}(),c,o,r)})),u.addEventListener("click",(t=>{t.preventDefault(),null!=e.selectedProject&&p(function(e){let t=new FormData(s);return e.addTodo(t.get("title"),t.get("priority"),t.get("dueDate"),t.get("desc"))}(e.selectedProject),s,r)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,